{"version":3,"sources":["./src/app/search/filter.pipe.ts","./src/app/services/documentary.service.ts","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/documentaries/documentaries.component.ts","./src/app/documentaries/documentaries.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/search/highlight.directive.ts","./src/app/categories/categories.component.ts","./src/app/categories/categories.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/models/models.ts","./src/app/app.module.ts","./src/app/services/category.service.ts","./src/app/firebase/firebase.component.ts","./src/app/firebase/firebase.component.html","./src/app/documentaries/documentary/documentary.component.ts","./src/app/documentaries/documentary/documentary.component.html","./src/app/services/tag.service.ts","./src/app/search/search.component.ts","./src/app/search/search.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n// Resources from https://dev.to/idrisrampurawala/creating-a-search-filter-in-angular-562d\r\n@Pipe({ name: 'appFilter' })\r\nexport class FilterPipe implements PipeTransform {\r\n  /**\r\n   * Transform\r\n   *\r\n   * @param {any[]} items\r\n   * @param {string} searchText\r\n   * @returns {any[]}\r\n   */\r\n  transform(items: any[], searchText: string): any[] {\r\n    if (!items) {\r\n      return [];\r\n    }\r\n    if (!searchText) {\r\n      return items;\r\n    }\r\n    searchText = searchText.toLocaleLowerCase();\r\n\r\n    return items.filter(it => {\r\n      return it.toLocaleLowerCase().includes(searchText);\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DocumentaryService {\r\n\r\n  constructor(private db: AngularFirestore) { }\r\n\r\n  // Return all Documentary objects from Firebase\r\n  readFromDB() {\r\n    return new Promise<any>((resolve)=> {\r\n      this.db.collection('documentary').valueChanges({ idField: 'id' }).subscribe(docos => resolve(docos));\r\n    })\r\n  }\r\n\r\n  addToDB(name: string, desc: string, linkToDoco: string, producer: string, studio: string, category: string, tags: string[]) {\r\n    console.log(\"Adding doco\");\r\n    this.db.collection('test').add({\r\n      category: category,\r\n      description: desc,\r\n      link: \"test link\",\r\n      linkToDoco: linkToDoco,\r\n      name: name,\r\n      producer: producer,\r\n      studio: studio,\r\n      tags: tags,\r\n      topic: \"blah\"\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>about works!</h1>\n<p>This is an archive of a bunch of docos with summaries about them</p>\n\n","import { Component, OnInit } from '@angular/core';\r\nimport { DocumentaryService } from '../services/documentary.service';\r\nimport { TagService } from '../services/tag.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CategoryService } from '../services/category.service';\r\n\r\n@Component({\r\n  selector: 'app-documentaries',\r\n  templateUrl: './documentaries.component.html',\r\n  styleUrls: ['./documentaries.component.css']\r\n})\r\nexport class DocumentariesComponent implements OnInit {\r\n\r\n  // For the url at the top\r\n  linkRoute: string;\r\n\r\n  // Tag and documentary data from DB\r\n  tagsList: any;\r\n  documentariesList: any;\r\n  categoryList: any;\r\n\r\n  // Used for only displaying current categories\r\n  currentTagId: string = \"\";\r\n  currentTag: string = \"\";\r\n  currentCategoryId: string = \"\";\r\n  currentCategory: string = \"\";\r\n  isTag: boolean = false;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private categoryService: CategoryService,\r\n    private tagService: TagService,\r\n    private docoService: DocumentaryService\r\n  ) { \r\n    // params is the :id (unique value) from the link (eg 'aircrash' from /categories/aircrash). \r\n    this.route.params.subscribe(params => {\r\n      this.listDocos();\r\n      console.log(params);\r\n    });\r\n  }\r\n\r\n  // Provide a list of documentaries\r\n  ngOnInit(): void {\r\n    this.currentTag = \"\";\r\n    this.currentCategory = \"\";\r\n    this.listDocos();\r\n  }\r\n\r\n  // Only list documentaries that match the tag, eg 'aircrash'.\r\n  listDocos() {\r\n    let url = window.location.href;\r\n    this.linkRoute = url.substring(url.lastIndexOf(\"/\")+1, url.length);\r\n    this.documentariesList = this.docoService.readFromDB();\r\n\r\n    this.currentTag = \"\";\r\n    this.currentCategory = \"\";\r\n    this.currentTagId = \"\";\r\n    this.currentCategoryId = \"\";\r\n\r\n\r\n    this.getCurrentTag();\r\n    this.getCurrentCategory();\r\n  }\r\n\r\n  // Find the current tag of the page (eg, find if the user selected 'aircrash'). \r\n  async getCurrentTag() {\r\n    this.tagsList = await this.tagService.readFromDB();\r\n    this.tagsList.forEach(tag => {\r\n      if(this.linkRoute.match(tag.link.toString())){\r\n        this.currentTagId = tag.id;\r\n        this.currentTag = tag.name;\r\n      }\r\n    });\r\n    console.log(\"Tag Pipeline: \" + this.currentTag);\r\n  }\r\n\r\n  // Find the current category of the page (eg, find if the user selected 'health'). \r\n  async getCurrentCategory() {\r\n    this.categoryList = await this.categoryService.readFromDB();\r\n    this.categoryList.forEach(category => {\r\n      if(this.linkRoute.match(category.link.toString())){\r\n        this.currentCategoryId = category.id;\r\n        this.currentCategory = category.name;\r\n      }\r\n    });\r\n    console.log(\"Category Pipeline: \" + this.currentCategory);\r\n  }\r\n}\r\n","<div *ngIf=\"currentTag!=''; else categoryHeading\"> \r\n  <h3> List of {{currentTag}} only: </h3>\r\n</div>\r\n<ng-template #categoryHeading>\r\n  <h3> List of {{currentCategory}} only: </h3>\r\n</ng-template>\r\n<!-- If viewing docos by tag -->\r\n<div *ngIf=\"currentTag!=''; else showAllFromCategory\"> \r\n  <div *ngFor=\"let doco of documentariesList | async\"  role=\"listitem\">\r\n    <!-- If user selected to only show docos for a specific tag -->\r\n    <div *ngFor=\"let tag of doco.tags\"  role=\"listitem\">\r\n      <div *ngIf=\"tag===currentTagId\"> \r\n        <!-- Display their details -->\r\n        <a routerLink=\"{{doco.link}}\"> {{doco.name}} </a>\r\n        <p>{{doco.description}}</p>\r\n        <p>{{doco.studio}}</p>\r\n        <p>{{doco.tags}}</p>\r\n        <!-- End of details -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- If viewing docos by a specific category -->\r\n<ng-template #showAllFromCategory>\r\n  <!-- Show a list of tags under that category -->\r\n  <div *ngFor=\"let tag of tagsList\"  role=\"listitem\">\r\n    <div *ngIf=\"tag.category===currentCategoryId\"> \r\n      <a routerLink=\"{{'/categories/'+tag.link}}\">{{'#'+tag.name}}</a>\r\n    </div>\r\n  </div>\r\n  <!-- Show documentaries under that category -->\r\n  <div *ngFor=\"let doco of documentariesList | async\"  role=\"listitem\">\r\n    <div *ngIf=\"doco.category===currentCategoryId\"> \r\n      <!-- Display their details -->\r\n      <a routerLink=\"{{doco.link}}\"> {{doco.name}} </a>\r\n      <p>{{doco.description}}</p>\r\n      <p>{{doco.studio}}</p>\r\n      <p>{{doco.tags}}</p>\r\n      <p>{{doco.category}}</p>\r\n      <!-- End of details -->\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n<!-- End of loop -->\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: \"AIzaSyAtEb_thlfuE48qKlKdUdRf42cmTuvYgaE\",\n    authDomain: \"docusummaries.firebaseapp.com\",\n    projectId: \"docusummaries\",\n    storageBucket: \"docusummaries.appspot.com\",\n    messagingSenderId: \"754961246857\",\n    appId: \"1:754961246857:web:f4bad64b3c791faaaff458\",\n    measurementId: \"G-0E3Y8SW1VF\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Directive, Input, SimpleChanges, Renderer2, ElementRef, OnChanges } from '@angular/core';\r\n\r\n// Resources from https://dev.to/idrisrampurawala/creating-a-search-filter-in-angular-562d\r\n@Directive({\r\n  selector: '[appHighlight]'\r\n})\r\nexport class HighlightDirective implements OnChanges {\r\n  @Input() searchedWord: string;\r\n  @Input() content: string;\r\n  @Input() classToApply: string;\r\n  @Input() setTitle = false;\r\n\r\n  constructor(private el: ElementRef, private renderer: Renderer2) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (!this.content) {\r\n      return;\r\n    }\r\n\r\n    if (this.setTitle) {\r\n      this.renderer.setProperty(\r\n        this.el.nativeElement,\r\n        'title',\r\n        this.content\r\n      );\r\n    }\r\n\r\n    if (!this.searchedWord || !this.searchedWord.length || !this.classToApply) {\r\n      this.renderer.setProperty(this.el.nativeElement, 'innerHTML', this.content);\r\n      return;\r\n    }\r\n\r\n    this.renderer.setProperty(\r\n      this.el.nativeElement,\r\n      'innerHTML',\r\n      this.getFormattedText()\r\n    );\r\n  }\r\n\r\n  getFormattedText() {\r\n    const re = new RegExp(`(${this.searchedWord})`, 'gi');\r\n    return this.content.replace(re, `<span class=\"${this.classToApply}\">$1</span>`);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { TagService } from '../services/tag.service';\nimport { CategoryService } from '../services/category.service';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent implements OnInit {\n\n  // Data taken directly from Dabatase\n  categoryList: any;\n  tagsList: any;\n\n  constructor(\n    private tagService: TagService,\n    private categoryService: CategoryService\n  ) { }\n\n  // Read and Store Categories and Tags\n  ngOnInit(): void {\n    this.categoryList = this.categoryService.readFromDB();\n    this.tagsList = this.tagService.readFromDB();\n  }\n}\n","<h3>List of all categories:</h3>\r\n<!-- Loop through every category -->\r\n<div *ngFor=\"let category of categoryList | async\"  role=\"listitem\">\r\n  <h3><a routerLink=\"{{category.link}}\">{{category.name}}</a></h3>\r\n  <!-- Display all related tags underneath the category -->\r\n  <div *ngFor=\"let tag of tagsList | async\"  role=\"listitem\">\r\n    <p *ngIf=\"tag.category===category.id\"> \r\n      <a routerLink=\"{{tag.link}}\">{{tag.name}}</a>\r\n    </p>\r\n  </div>\r\n  <br>\r\n</div>\r\n\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'docusummaries';\n}\n","<div class=\"container\">\r\n  <h2>Testing</h2>\r\n\r\n  <!-- Group these into a navbar -->\r\n  <a routerLink=\"firebase\">Firebase Component</a>\r\n  <br>\r\n  <a routerLink=\"about\">About Component</a>\r\n  <br>\r\n  <a routerLink=\"categories\">Categories Component</a>\r\n  <br>\r\n  <br>\r\n  <!-- End of Navbar -->\r\n  <app-search></app-search>\r\n\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DocumentaryService } from '../services/documentary.service';\r\nimport { CategoryService } from '../services/category.service';\r\nimport { TagService } from '../services/tag.service';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  categoryList: any;\r\n  tagsByCategory: Array<string>;\r\n  hideTags: boolean = true;\r\n  \r\n  // User inputs\r\n  docoName: string;\r\n  description: string;\r\n  linkToDoco: string;\r\n  producer: string;\r\n  studio: string;\r\n  category: string;\r\n  tags: any;\r\n  tagsList: Array<string>;\r\n  topic: string;\r\n\r\n  // Generated Saved Data\r\n  link: string\r\n\r\n  constructor(\r\n    private tagService: TagService,\r\n    private docoService: DocumentaryService,\r\n    private categoryService: CategoryService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.tagsByCategory = new Array<string>();\r\n    this.categoryList = this.categoryService.readFromDB();\r\n  }\r\n\r\n  onAdd() {\r\n    console.log(\"Added successfully --> \" +\r\n                \"Name: \" + this.docoName + \", \" +\r\n                \"Description: \" + this.description + \", \" +\r\n                \"linkToDoco: \" + this.linkToDoco + \", \" +\r\n                \"producer: \" + this.producer + \", \" +\r\n                \"studio: \" + this.studio + \", \" +\r\n                \"category: \" + this.category);\r\n                \r\n    console.log(this.tags);\r\n    this.docoService.addToDB(this.docoName, this.description, this.linkToDoco, this.producer, this.studio, this.category, this.tags);\r\n  }\r\n\r\n  async onCategoryChange() {\r\n    this.tagsByCategory = await this.tagService.readTagsByCategory(this.category);\r\n    this.hideTags = false;\r\n  }\r\n}\r\n","<hr>\r\n<h1>Admin - Add and Edit Docos</h1>\r\n\r\n<br>\r\n\r\n<form>\r\n  <!-- Doco Name -->\r\n  <div class=\"form-group\">\r\n    <label for=\"docoName\">Doco Name</label>\r\n    <input type=\"text\" class=\"form-control\" \r\n      [(ngModel)]=\"docoName\" name=\"docoName\" id=\"docoName\" \r\n      placeholder=\"Seconds From Disaster: Aircrash\">\r\n  </div>\r\n  <!-- Description -->\r\n  <div class=\"form-group\">\r\n    <label for=\"description\">Description</label>\r\n    <textarea class=\"form-control\" \r\n      [(ngModel)]=\"description\" name=\"description\" id=\"description\" rows=\"3\"\r\n      placeholder=\"A short description here\">\r\n    </textarea>\r\n  </div>\r\n  <!-- Link To Doco -->\r\n  <div class=\"form-group\">\r\n    <label for=\"linkToDoco\">Link To Doco</label>\r\n    <input type=\"text\" class=\"form-control\" \r\n      [(ngModel)]=\"linkToDoco\" name=\"linkToDoco\" id=\"linkToDoco\" \r\n      placeholder=\"https://www.youtube.com/watch?v=It1y9bu9VUA\">\r\n  </div>\r\n  <!-- Producer -->\r\n  <div class=\"form-group\">\r\n    <label for=\"producer\">Producer</label>\r\n    <input type=\"text\" class=\"form-control\" \r\n      [(ngModel)]=\"producer\" name=\"producer\" id=\"producer\" \r\n      placeholder=\"Malcolm\">\r\n  </div>\r\n  <!-- Studio -->\r\n  <div class=\"form-group\">\r\n    <label for=\"studio\">Studio</label>\r\n    <input type=\"text\" class=\"form-control\" \r\n      [(ngModel)]=\"studio\" name=\"studio\" id=\"studio\" \r\n      placeholder=\"Falcon\">\r\n  </div>\r\n  <!-- Category -->\r\n  <div class=\"form-group\">\r\n    <label for=\"category\">Category</label>\r\n    <select class=\"form-control\" (change)=\"onCategoryChange();\" [(ngModel)]=\"category\" name=\"category\" id=\"category\">\r\n      <option>Please Select</option>\r\n      <option *ngFor=\"let category of categoryList | async\"  role=\"listitem\">\r\n        {{category.id}}\r\n      </option>\r\n    </select>\r\n  </div>\r\n  <!-- Multi Select Tags -->\r\n  <div [hidden]=\"hideTags\" class=\"form-group\">\r\n    <label for=\"tags\">Tags</label>\r\n    <select multiple class=\"form-control\" size=\"10\" style=\"height: 100%;\" [(ngModel)]=\"tags\" name=\"tags\" id=\"tags\">\r\n      <option *ngFor=\"let tag of tagsByCategory\" role=\"listitem\">\r\n        {{tag.id}}\r\n      </option>\r\n    </select>\r\n  </div>\r\n</form>\r\n\r\n<button (click)=\"onAdd()\" type=\"button\" class=\"btn btn-primary\">(+) Add</button>","export class Documentary {\r\n  name: string = \"Loading...\";\r\n  description: string = \"Fetching...\";\r\n  linkToDoco: string = \"\";\r\n  producer: string = \"Fetching...\";\r\n  studio: string = \"Fetching...\";\r\n  tags: Array<string> = [\"Fetching...\"];\r\n  topic: string = \"Fetching...\";\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, SecurityContext } from '@angular/core';\r\nimport { FormsModule, FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { environment } from \"../environments/environment\";\r\n\r\n// Searchbar\r\nimport { HighlightDirective } from './search/highlight.directive';\r\nimport { FilterPipe } from './search/filter.pipe';\r\nimport { SearchComponent } from './search/search.component';\r\n\r\n// Firebase\r\nimport { FirebaseComponent } from './firebase/firebase.component';\r\nimport { AngularFireModule } from \"@angular/fire\";\r\nimport { AngularFireAnalyticsModule } from \"@angular/fire/analytics\";\r\nimport { AngularFirestoreModule } from \"@angular/fire/firestore\";\r\nimport { AngularFireStorageModule } from \"@angular/fire/storage\";\r\n\r\n// Markdown\r\nimport { MarkdownModule } from 'ngx-markdown';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\n\r\n// Main pages\r\nimport { AboutComponent } from './about/about.component';\r\nimport { CategoriesComponent } from './categories/categories.component';\r\nimport { DocumentariesComponent } from './documentaries/documentaries.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { DocumentaryComponent } from './documentaries/documentary/documentary.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    // Pages\r\n    AppComponent,\r\n    FirebaseComponent,\r\n    AboutComponent,\r\n    CategoriesComponent,\r\n    DocumentariesComponent,\r\n    HomeComponent,\r\n    DocumentaryComponent,\r\n    // Searchbar\r\n    HighlightDirective,\r\n    FilterPipe,\r\n    SearchComponent,\r\n    AdminComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    // Firebase\r\n    AngularFireModule.initializeApp(environment.firebaseConfig),\r\n    AngularFireAnalyticsModule,\r\n    AngularFirestoreModule,\r\n    AngularFireStorageModule,\r\n    // Markdown\r\n    HttpClientModule,\r\n    MarkdownModule.forRoot({ loader: HttpClient, sanitize: SecurityContext.NONE })\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n  \n  constructor(private db: AngularFirestore) { }\n\n  // Return all Category objects from Firebase\n  readFromDB() {\n    return new Promise<any>((resolve)=> {\n      this.db.collection('category').valueChanges({ idField: 'id' }).subscribe(categories => resolve(categories));\n    })\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { TagService } from '../services/tag.service';\nimport { CategoryService } from '../services/category.service';\nimport { DocumentaryService } from '../services/documentary.service';\n\n@Component({\n  selector: 'app-firebase',\n  templateUrl: './firebase.component.html',\n  styleUrls: ['./firebase.component.css']\n})\nexport class FirebaseComponent implements OnInit {\n\n  categoryList: any;\n  tagsList: any;\n  documentariesList: any;\n\n  constructor(\n    private tagService: TagService,\n    private categoryService: CategoryService,\n    private docoService: DocumentaryService\n  ) { }\n\n  ngOnInit(): void {\n    this.categoryList = this.categoryService.readFromDB();\n    this.tagsList = this.tagService.readFromDB();\n    this.documentariesList = this.docoService.readFromDB();\n  }\n}\n","<p>firebase works!</p>\n\n<h3>Categories:</h3>\n<ul>\n  <li *ngFor=\"let category of categoryList | async\"  role=\"listitem\">\n      {{category.name}}\n  </li>\n</ul>\n<h3>Tags:</h3>\n<ul>\n  <li *ngFor=\"let tag of tagsList | async\"  role=\"listitem\">\n      {{tag.name}}\n  </li>\n</ul>\n<h3>Docos:</h3>\n<ul>\n  <li *ngFor=\"let doco of documentariesList | async\"  role=\"listitem\">\n      {{doco.name}}\n      {{doco.author}}\n      <!-- {{doco.tags}} -->\n      <ul>\n        <li *ngFor=\"let tag of doco.tags\"  role=\"listitem\">\n            {{tag}}\n        </li>\n      </ul>\n  </li>\n</ul>\n<h3>List of Aircrash only:</h3>\n<div *ngFor=\"let doco of documentariesList | async\"  role=\"listitem\">\n  <div *ngFor=\"let tag of doco.tags\"  role=\"listitem\">\n    <p *ngIf=\"tag==='id-aircrash'\"> \n      {{doco.name}}\n      {{doco.author}}\n      {{tag}}\n    </p>\n  </div>\n</div>\n<h3>List of Bomb only:</h3>\n<div *ngFor=\"let doco of documentariesList | async\"  role=\"listitem\">\n  <div *ngFor=\"let tag of doco.tags\"  role=\"listitem\">\n    <p *ngIf=\"tag==='id-explosionsOrFire'\"> \n      {{doco.name}}\n      {{doco.author}}\n      {{tag}}\n    </p>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DocumentaryService } from '../../services/documentary.service';\r\nimport { Documentary } from '../../models/models';\r\n\r\n@Component({\r\n  selector: 'app-documentary',\r\n  templateUrl: './documentary.component.html',\r\n  styleUrls: ['./documentary.component.css']\r\n})\r\nexport class DocumentaryComponent implements OnInit {\r\n\r\n  // declare doco variables\r\n  post: string;\r\n  articleName: string;\r\n  documentariesList: any;\r\n  currentDoco: Documentary = new Documentary();\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private docoService: DocumentaryService\r\n  ) { \r\n    // params is the :id (unique value) from the link (eg 'Comet781' from /../article/Comet781). \r\n    this.route.params.subscribe(params => {\r\n      this.articleName = params.article;\r\n      this.getCurrentDoco();\r\n    });\r\n  }\r\n\r\n  // Get the article's name using the route and find the associated md file in src/assets.\r\n  ngOnInit(): void {\r\n    this.articleName = this.route.snapshot.paramMap.get('article');\r\n    this.post = './assets/articles/' +  this.articleName + '.md';\r\n    this.getCurrentDoco();\r\n  }\r\n\r\n  // Find the rest of the info related to the current doco (eg, description), to display it.\r\n  async getCurrentDoco() {\r\n    this.documentariesList = await this.docoService.readFromDB();\r\n    this.documentariesList.forEach(doco => {\r\n      if(doco.link.toString().includes(this.articleName)){\r\n        this.currentDoco = doco;\r\n      }\r\n    });\r\n    console.log(\"Current Doco: \" + this.currentDoco.name + \", \" + this.currentDoco.studio);\r\n  }\r\n\r\n}\r\n","<!-- Print the info of the selected documentary -->\r\n<div>\r\n  <h2>{{currentDoco.name}}</h2>\r\n  <p><b>Description:</b> {{currentDoco.description}}</p>\r\n  <p><b>Find on Youtube:</b> <a href=\"{{currentDoco.linkToDoco}}\">{{currentDoco.linkToDoco}}</a></p> \r\n  <p><b>Producer:</b> {{currentDoco.producer}}</p>\r\n  <p><b>Studio:</b> {{currentDoco.studio}}</p>\r\n  <p><b>Tags:</b> {{currentDoco.tags}}</p>\r\n  <p><b>Topic:</b> {{currentDoco.topic}}</p>\r\n  <div markdown [src]=\"post\"></div>\r\n</div>\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TagService {\r\n  \r\n  tagsList: any;\r\n  tagsByCategory: Array<string>;\r\n\r\n  constructor(\r\n    private db: AngularFirestore\r\n  ) { }\r\n\r\n  // Return all Tag objects from Firebase\r\n  readFromDB() {\r\n    return new Promise<any>((resolve)=> {\r\n      this.db.collection('tag').valueChanges({ idField: 'id' }).subscribe(tags => resolve(tags));\r\n    })\r\n  }\r\n\r\n  // Return all Tag objects under a specific category\r\n  async readTagsByCategory(category: string) {\r\n    this.tagsByCategory = new Array<string>()\r\n    this.tagsList = await this.readFromDB();\r\n    this.tagsList.forEach(tag => {\r\n      if(tag.category==category) {\r\n        this.tagsByCategory.push(tag)\r\n      }\r\n    });\r\n    return this.tagsByCategory;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TagService } from '../services/tag.service';\r\nimport { DocumentaryService } from '../services/documentary.service';\r\nimport { CategoryService } from '../services/category.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n  \r\n  // Declare search string elements\r\n  searchText = '';\r\n  documentariesList: any;\r\n  tagsList: any;\r\n  categoriesList: any; \r\n  searchString: Array<string> = new Array<string>();\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private categoryService: CategoryService,\r\n    private docoService: DocumentaryService,\r\n    private tagService: TagService\r\n  ) { }\r\n\r\n  // Build search string\r\n  ngOnInit(): void {\r\n    this.addCatagories();\r\n    this.addTags();\r\n    this.addDocos();\r\n    console.log(\"Search string created.\" + this.searchString);\r\n  }\r\n\r\n  onSelect() {\r\n    console.log(\"Something selected\");\r\n    this.searchText = '';\r\n  }\r\n\r\n  // Pull categories list from Firebase and add to the search string\r\n  async addCatagories() {\r\n    this.categoriesList = await this.categoryService.readFromDB();\r\n    this.categoriesList.forEach(category => {\r\n      this.searchString.push(category.name + \" (Category) -@/categories/\" + category.link);\r\n    });\r\n  }\r\n\r\n  // Pull categories list from Firebase and add to the search string\r\n  async addTags() {\r\n    this.tagsList = await this.tagService.readFromDB();\r\n    this.tagsList.forEach(tag => {\r\n      this.searchString.push(\"#\" + tag.name + \" -@/categories/\" + tag.link);\r\n    });\r\n  }\r\n\r\n  // Pull docos list from Firebase and add to the search string\r\n  async addDocos() {\r\n    this.documentariesList = await this.docoService.readFromDB();\r\n    this.documentariesList.forEach(doco => {\r\n      this.searchString.push(\r\n        doco.name + \" - \" + \r\n        doco.studio + \" - \" +\r\n        doco.tags + \" - \" +\r\n        doco.topic + \" -@\" +\r\n        doco.link\r\n      );\r\n    });\r\n  }\r\n}\r\n","<!-- Container for search -->\r\n<div class=\"content\" role=\"main\">\r\n  <!-- Input for searchbox -->\r\n  <div class=\"form-group\">\r\n    <label for=\"search-text\">Search Text</label>\r\n    <input type=\"email\" class=\"form-control\" id=\"search-text\" aria-describedby=\"search-text\" [(ngModel)]=\"searchText\"\r\n      placeholder=\"Enter text to search\" autofocus>\r\n  </div>\r\n  <!-- End input -->\r\n  <!-- List of results -->\r\n  <div class=\"list-group list-group-flush\" [hidden]=\"searchText==''\">\r\n    <div class=\"list-group-item\" *ngFor=\"let c of searchString | appFilter: searchText | slice: 0:20; let i=index\" appHighlight\r\n      [searchedWord]=\"searchText\" [classToApply]=\"'font-weight-bold'\" [setTitle]=\"'true'\" [hidden]=\"searchText==''\">\r\n        <a (click)=\"onSelect()\" routerLink=\"{{c.substring(c.indexOf('@')+1,c.length)}}\">{{c.substring(0,c.indexOf(' -@'))}}</a>\r\n    </div>\r\n  </div>\r\n    <!-- End of results list -->\r\n</div>\r\n<!-- End search -->\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { CategoriesComponent } from './categories/categories.component';\r\nimport { DocumentariesComponent } from './documentaries/documentaries.component';\r\nimport { DocumentaryComponent } from './documentaries/documentary/documentary.component';\r\nimport { FirebaseComponent } from './firebase/firebase.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'admin', component: AdminComponent },\r\n  { path: 'firebase', component: FirebaseComponent },\r\n  { path: 'about', component: AboutComponent },\r\n  { path: 'categories', component: CategoriesComponent },\r\n  { path: 'categories/:id', component: DocumentariesComponent },\r\n  { path: 'categories/article/:article', component: DocumentaryComponent },\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}